"""
–ö–ª–∞—Å—Å –∏–≥—Ä–æ–∫–∞ - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, —Ñ–∏–∑–∏–∫–∞, –∞–Ω–∏–º–∞—Ü–∏–∏
"""

import pygame
import math  # ‚Üê –î–û–ë–ê–í–¨ –≠–¢–£ –°–¢–†–û–ö–£
from pygame.math import Vector2
from .health import HealthComponent
from .experience import ExperienceSystem
from .items.inventory import Inventory
from .animation import Animation
from .asset_loader import asset_loader

class Player(pygame.sprite.Sprite):
    def __init__(self, pos=(100, 300)):
        super().__init__()
        
        # –ê–Ω–∏–º–∞—Ü–∏–∏
        self.animations = self.create_animations()
        self.current_animation = "idle"
        self.facing_right = True
        
        self.image = self.animations["idle"].get_current_frame()
        self.rect = self.image.get_rect(topleft=pos)
        
        # –§–∏–∑–∏–∫–∞
        self.velocity = Vector2(0, 0)
        self.speed = 300
        self.jump_power = -600
        self.gravity = 1500
        self.on_ground = False
        
        # –ë–æ–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞
        self.is_attacking = False
        self.attack_cooldown = 0
        self.attack_damage = 10
        self.attack_rect = pygame.Rect(0, 0, 50, 32)
        
        # RPG —Å–∏—Å—Ç–µ–º—ã
        self.health_component = HealthComponent(100)
        self.experience = ExperienceSystem(self)
        self.inventory = Inventory()
        
        # –¢–∞–π–º–µ—Ä –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
        self.damage_effect_timer = 0
        
        print("üéØ –ò–≥—Ä–æ–∫ —Å–æ–∑–¥–∞–Ω!")
    
    def create_animations(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–π –∏–∑ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ Kenney"""
        animations = {}
        
        try:
            # –ü–†–û–°–¢–û–ô –í–ê–†–ò–ê–ù–¢ - –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–∞–∂–¥—É—é –∞–Ω–∏–º–∞—Ü–∏—é –∫–∞–∫ –æ–¥–∏–Ω –∫–∞–¥—Ä
            # Idle –∞–Ω–∏–º–∞—Ü–∏—è
            idle_img = asset_loader.load_image("player/player_idle.png", scale=2)
            if idle_img:
                animations["idle"] = Animation([idle_img], 0.2)
                print("‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ idle –∞–Ω–∏–º–∞—Ü–∏—è")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å idle –∞–Ω–∏–º–∞—Ü–∏—é")

            # Run –∞–Ω–∏–º–∞—Ü–∏—è  
            run_img = asset_loader.load_image("player/player_run.png", scale=2)
            if run_img:
                animations["run"] = Animation([run_img], 0.15)
                print("‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ run –∞–Ω–∏–º–∞—Ü–∏—è")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å run –∞–Ω–∏–º–∞—Ü–∏—é")

            # Jump –∞–Ω–∏–º–∞—Ü–∏—è
            jump_img = asset_loader.load_image("player/player_jump.png", scale=2)
            if jump_img:
                animations["jump"] = Animation([jump_img], 0.2)
                print("‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ jump –∞–Ω–∏–º–∞—Ü–∏—è")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å jump –∞–Ω–∏–º–∞—Ü–∏—é")

            # Hit –∞–Ω–∏–º–∞—Ü–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª)
            try:
                hit_img = asset_loader.load_image("player/player_hit.png", scale=2)
                if hit_img:
                    animations["hit"] = Animation([hit_img], 0.1, loop=False)
                    print("‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞ hit –∞–Ω–∏–º–∞—Ü–∏—è")
            except:
                print("‚ÑπÔ∏è –§–∞–π–ª hit –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–º –∑–∞–≥–ª—É—à–∫—É")
                hit_frame = pygame.Surface((32, 64), pygame.SRCALPHA)
                hit_frame.fill((255, 100, 100))
                animations["hit"] = Animation([hit_frame], 0.1, loop=False)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—è
            if animations:
                print("üéâ –ê–Ω–∏–º–∞—Ü–∏–∏ –∏–≥—Ä–æ–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
                return animations
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∏ –æ–¥–Ω—É –∞–Ω–∏–º–∞—Ü–∏—é –∏–≥—Ä–æ–∫–∞")
                return self.create_placeholder_animations()
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø—Ä–∞–π—Ç–æ–≤: {e}")
            import traceback
            traceback.print_exc()
            return self.create_placeholder_animations()
    
    def create_placeholder_animations(self):
        """–ê–Ω–∏–º–∞—Ü–∏–∏-–∑–∞–≥–ª—É—à–∫–∏ –Ω–∞ —Å–ª—É—á–∞–π –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Å–ø—Ä–∞–π—Ç–æ–≤"""
        animations = {}
        
        # Idle –∞–Ω–∏–º–∞—Ü–∏—è
        idle_frames = []
        for i in range(4):
            frame = pygame.Surface((32, 64), pygame.SRCALPHA)
            # –°–∏–Ω–∏–π –∏–≥—Ä–æ–∫
            pygame.draw.ellipse(frame, (30, 144, 255), (8, 20, 16, 30))
            pygame.draw.circle(frame, (255, 218, 185), (16, 15), 8)
            pygame.draw.circle(frame, (0, 0, 0), (12, 13), 2)
            pygame.draw.circle(frame, (0, 0, 0), (20, 13), 2)
            idle_frames.append(frame)
        animations["idle"] = Animation(idle_frames, 0.2)
        
        # Run –∞–Ω–∏–º–∞—Ü–∏—è
        run_frames = []
        for i in range(6):
            frame = pygame.Surface((32, 64), pygame.SRCALPHA)
            color = (0, 255, 0) if i % 2 == 0 else (30, 144, 255)
            pygame.draw.ellipse(frame, color, (8, 20, 16, 30))
            run_frames.append(frame)
        animations["run"] = Animation(run_frames, 0.1)
        
        return animations

    # ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞ (update, handle_input –∏ —Ç.–¥.)