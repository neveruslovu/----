# game/platform.py
import pygame
from .asset_loader import asset_loader

class Platform(pygame.sprite.Sprite):
    def __init__(self, x, y, width, height, platform_type="grass", is_trap=False, is_door=False):
        super().__init__()
        
        self.platform_type = platform_type
        self.is_trap = is_trap
        self.is_door = is_door
        
        # üî• –ò–°–ü–û–õ–¨–ó–£–ï–ú TILESET –î–õ–Ø –ü–û–õ–£–ß–ï–ù–ò–Ø –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø
        self.image = self.get_tile_image(platform_type)
        if self.image:
            self.image = pygame.transform.scale(self.image, (width, height))
        else:
            # –ó–∞–≥–ª—É—à–∫–∞ –µ—Å–ª–∏ —Ç–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
            self.image = pygame.Surface((width, height))
            self.image.fill((100, 200, 100))  # –ó–µ–ª–µ–Ω—ã–π –¥–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º
        
        self.rect = self.image.get_rect(topleft=(x, y))
        self.has_collision = True  # –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã –≤—Å–µ–≥–¥–∞ –∏–º–µ—é—Ç –∫–æ–ª–ª–∏–∑–∏–∏
    
    def get_tile_image(self, platform_type):
        """üî• –ü–û–õ–£–ß–ê–ï–ú –¢–ê–ô–õ –ò–ó TILESET –ü–û –¢–ò–ü–£"""
        # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å mapping –º–µ–∂–¥—É —Ç–∏–ø–∞–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º –∏ GID
        type_to_gid = {
            "grass1": 1,  
            "grass_half": 2,
            "grass_half_left": 3,
            "grass_half_mid": 4,
            "grass_half_right": 5,
            "grass_hill_right": 6,
            "grass_round": 7,
            "triangle": 25,
            "semitype1": 57,
            "semitype2": 49, 
            "semitype3": 41,
            "grass2": 9,
            "grass3": 89, 
            "grass4": 97,
            "grass5": 73,
            "grass6": 17,
            "box": 341
        }
        
        gid = type_to_gid.get(platform_type, 1)
        return asset_loader.get_tile_image(gid)
    
    def draw(self, screen, camera):
        screen.blit(self.image, camera.apply(self.rect))