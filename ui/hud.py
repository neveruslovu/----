import pygame
import os
import sys

sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

class HUD:
    def __init__(self, player):
        self.player = player
        self.font = pygame.font.Font(None, 36)
        
        # üîß –°–ù–ê–ß–ê–õ–ê –æ–±—ä—è–≤–ª—è–µ–º heart_size
        self.heart_size = 30  # –†–∞–∑–º–µ—Ä —Å–µ—Ä–¥–µ—á–µ–∫
        
        # üîß –ü–û–¢–û–ú –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø—Ä–∞–π—Ç—ã —Å–µ—Ä–¥–µ—Ü
        self.heart_full = self.load_heart_image("hud/hudheart_full.png")
        self.heart_half = self.load_heart_image("hud/hudheart_half.png") 
        self.heart_empty = self.load_heart_image("hud/hudheart_empty.png")
        
        print("üéØ HUD —Å —Å–µ—Ä–¥—Ü–∞–º–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    def load_heart_image(self, path):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–µ—Ä–¥—Ü–∞ —Å –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
        try:
            from game.asset_loader import asset_loader
            heart = asset_loader.load_image(path, 1.0)
            if heart:
                # –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º –¥–æ –Ω—É–∂–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
                return pygame.transform.scale(heart, (self.heart_size, self.heart_size))
        except Exception as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å {path}: {e}")
        
        # –ó–∞–≥–ª—É—à–∫–∞ –µ—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å
        surface = pygame.Surface((self.heart_size, self.heart_size), pygame.SRCALPHA)
        pygame.draw.rect(surface, (255, 0, 0), (0, 0, self.heart_size, self.heart_size))
        return surface
    
    def draw(self, screen):
        """–û—Ç—Ä–∏—Å–æ–≤–∫–∞ HUD —Å —Å–µ—Ä–¥—Ü–∞–º–∏"""
        try:
            # üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü–æ–ª—É—á–∞–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ health_component –∏–≥—Ä–æ–∫–∞
            if hasattr(self.player, 'health_component'):
                # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ health_component –∏–º–µ–µ—Ç current_health –∏ max_health
                current_health = self.player.health_component.current_health
                max_health = self.player.health_component.max_health
            else:
                # üî• –†–ï–ó–ï–†–í–ù–ê–Ø –õ–û–ì–ò–ö–ê: –µ—Å–ª–∏ health_component –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                current_health = 100
                max_health = 100
                print("‚ö†Ô∏è HealthComponent –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
            
            # üîß –û–¢–†–ò–°–û–í–ö–ê –°–ï–†–î–ï–¶
            self.draw_hearts(screen, current_health, max_health)
            
            # üî• –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û: –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ HP –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            hp_text = f"HP: {current_health}/{max_health}"
            hp_surface = self.font.render(hp_text, True, (255, 255, 255))
            screen.blit(hp_surface, (10, 50))
            
            # üî• –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –°–û–°–¢–û–Ø–ù–ò–Ø –ò–ì–†–û–ö–ê (–∂–∏–≤/–º–µ—Ä—Ç–≤)
            if hasattr(self.player, 'is_alive') and not self.player.is_alive:
                death_text = self.font.render("DEAD - Respawning...", True, (255, 0, 0))
                screen.blit(death_text, (10, 90))
            
            # üî• –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –ù–ï–£–Ø–ó–í–ò–ú–û–°–¢–ò
            if hasattr(self.player, 'is_invincible') and self.player.is_invincible:
                invincible_text = self.font.render("INVINCIBLE", True, (0, 255, 255))
                screen.blit(invincible_text, (10, 130))
                
        except Exception as e:
            print(f"‚ùå HUD error: {e}")
            # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π HUD –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
            error_text = self.font.render("HUD ERROR", True, (255, 0, 0))
            screen.blit(error_text, (10, 10))
    
    def draw_hearts(self, screen, current_health, max_health):
        """–û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Å–µ—Ä–¥–µ—Ü"""
        hearts_count = max_health // 20  # –ö–∞–∂–¥–æ–µ —Å–µ—Ä–¥—Ü–µ = 20 HP
        health_per_heart = 20
        
        x_position = 10
        y_position = 10
        
        for i in range(hearts_count):
            heart_health = current_health - (i * health_per_heart)
            
            if heart_health >= health_per_heart:
                # –ü–æ–ª–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ
                screen.blit(self.heart_full, (x_position, y_position))
            elif heart_health >= health_per_heart // 2:
                # –ü–æ–ª—É—Å–µ—Ä–¥—Ü–µ
                screen.blit(self.heart_half, (x_position, y_position))
            elif heart_health > 0:
                # –ü–æ–ª—É—Å–µ—Ä–¥—Ü–µ (–º–µ–Ω—å—à–µ –ø–æ–ª–æ–≤–∏–Ω—ã)
                screen.blit(self.heart_half, (x_position, y_position))
            else:
                # –ü—É—Å—Ç–æ–µ —Å–µ—Ä–¥—Ü–µ
                screen.blit(self.heart_empty, (x_position, y_position))
            
            x_position += self.heart_size + 5  # –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Å–µ—Ä–¥—Ü–∞–º–∏