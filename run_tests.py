import unittest
import sys
import os

def run_all_tests():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
    project_root = os.path.dirname(__file__)
    sys.path.insert(0, project_root)  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –¥–æ–±–∞–≤–ª–µ–Ω 0
    
    print("=" * 60)
    print("üéÆ –ó–ê–ü–£–°–ö –ê–í–¢–û–¢–ï–°–¢–û–í –î–õ–Ø –ò–ì–†–´")
    print("=" * 60)
    
    # –î–æ–±–∞–≤–ª—è–µ–º tests –≤ Python path
    sys.path.insert(0, os.path.join(project_root, 'tests'))  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –¥–æ–±–∞–≤–ª–µ–Ω 0
    
    test_files = [
        'test_imports',
        'test_units', 
        'test_integration'
    ]
    
    loader = unittest.TestLoader()
    suites = []
    
    for test_name in test_files:
        print(f"üîç –ó–∞–≥—Ä—É–∑–∫–∞: {test_name}")
        try:
            suite = loader.loadTestsFromName(test_name)
            suites.append(suite)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {test_name}: {e}")
    
    if not suites:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –∑–∞–ø—É—Å–∫–∞")
        return 1
    
    combined_suite = unittest.TestSuite(suites)
    
    print("\n" + "=" * 60)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 60)
    
    runner = unittest.TextTestRunner(verbosity=2)
    result = runner.run(combined_suite)
    
    # –í—ã–≤–æ–¥ –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –æ—à–∏–±–æ–∫
    if result.errors:
        print("\n" + "üö® –û–®–ò–ë–ö–ò:" + "=" * 50)
        for test, error in result.errors:
            print(f"‚ùå {test}: {error}")
    
    if result.failures:
        print("\n" + "üí• –ü–†–û–í–ê–õ–ï–ù–ù–´–ï –¢–ï–°–¢–´:" + "=" * 40)
        for test, failure in result.failures:
            print(f"‚ùå {test}: {failure}")
    
    print("\n" + "=" * 60)
    print("–ò–¢–û–ì–ò:")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: {result.testsRun - len(result.failures) - len(result.errors)}")
    print(f"‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: {len(result.failures)}")
    print(f"‚ö†Ô∏è  –û—à–∏–±–æ–∫: {len(result.errors)}")
    print("=" * 60)
    
    if result.wasSuccessful():
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return 0  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –¥–æ–±–∞–≤–ª–µ–Ω 0
    else:
        print("üí• –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ç–µ—Å—Ç–∞—Ö")
        return 1  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –¥–æ–±–∞–≤–ª–µ–Ω 1

if __name__ == '__main__':
    exit_code = run_all_tests()
    sys.exit(exit_code)